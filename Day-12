https://leetcode.com/explore/featured/card/may-leetcoding-challenge/535/week-2-may-8th-may-14th/3327/
Code:

class Solution {
public:
    int singleNonDuplicate(vector<int>& nums) {
        ios_base::sync_with_stdio(false);
        cin.tie(0);
        int n=nums.size();
        
        int s=0,e=n-1,mid;
        while(s<=e){
            mid=s+(e-s)/2;
            if(mid%2==0 && (mid+1==n || nums[mid]!=nums[mid+1])&& (mid-1==-1 || nums[mid]!=nums[mid-1]))
                return nums[mid];
            else if( (mid%2 && nums[mid-1]==nums[mid] )|| (mid%2==0 &&(mid+1==n || nums[mid+1]==nums[mid]))){
                s=mid+1;
            }
            else{
                e=mid-1;
                
            }
 
        }
        return 0;
    }
};
