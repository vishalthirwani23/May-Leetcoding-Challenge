https://leetcode.com/explore/featured/card/may-leetcoding-challenge/536/week-3-may-15th-may-21st/3331/
Code:

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* oddEvenList(ListNode* head) {
       if(head==NULL || head->next==NULL)
           return head;
        ListNode *oddHead=head,*evenHead=head->next,*odd=head,*even=head->next;
        while(even && even->next){
            odd->next=even->next;
            odd=even->next;
            even->next=odd->next;
            even =even->next;
            
        }
        odd->next=evenHead;
        return oddHead;
    }
};
